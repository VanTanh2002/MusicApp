// Generated by view binder compiler. Do not edit!
package com.poupa.vinylmusicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.github.ksoichiro.android.observablescrollview.ObservableListView;
import com.google.android.material.card.MaterialCardView;
import com.poupa.vinylmusicplayer.R;
import com.poupa.vinylmusicplayer.views.AutoTruncateTextView;
import com.poupa.vinylmusicplayer.views.TouchInterceptHorizontalScrollView;
import com.poupa.vinylmusicplayer.views.WidthFitSquareLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityArtistDetailBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView albumCountIcon;

  @NonNull
  public final TextView albumCountText;

  @NonNull
  public final FrameLayout cabHolder;

  @NonNull
  public final ImageView durationIcon;

  @NonNull
  public final TextView durationText;

  @NonNull
  public final LinearLayout header;

  @NonNull
  public final View headerOverlay;

  @NonNull
  public final ImageView image;

  @NonNull
  public final MaterialCardView imageBorderTheme;

  @NonNull
  public final WidthFitSquareLayout imageContainer;

  @NonNull
  public final ObservableListView list;

  @NonNull
  public final ImageView songCountIcon;

  @NonNull
  public final TextView songCountText;

  @NonNull
  public final AutoTruncateTextView title;

  @NonNull
  public final TouchInterceptHorizontalScrollView titleScrollview;

  @NonNull
  public final Toolbar toolbar;

  private ActivityArtistDetailBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView albumCountIcon, @NonNull TextView albumCountText,
      @NonNull FrameLayout cabHolder, @NonNull ImageView durationIcon,
      @NonNull TextView durationText, @NonNull LinearLayout header, @NonNull View headerOverlay,
      @NonNull ImageView image, @NonNull MaterialCardView imageBorderTheme,
      @NonNull WidthFitSquareLayout imageContainer, @NonNull ObservableListView list,
      @NonNull ImageView songCountIcon, @NonNull TextView songCountText,
      @NonNull AutoTruncateTextView title,
      @NonNull TouchInterceptHorizontalScrollView titleScrollview, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.albumCountIcon = albumCountIcon;
    this.albumCountText = albumCountText;
    this.cabHolder = cabHolder;
    this.durationIcon = durationIcon;
    this.durationText = durationText;
    this.header = header;
    this.headerOverlay = headerOverlay;
    this.image = image;
    this.imageBorderTheme = imageBorderTheme;
    this.imageContainer = imageContainer;
    this.list = list;
    this.songCountIcon = songCountIcon;
    this.songCountText = songCountText;
    this.title = title;
    this.titleScrollview = titleScrollview;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityArtistDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityArtistDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_artist_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityArtistDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.album_count_icon;
      ImageView albumCountIcon = ViewBindings.findChildViewById(rootView, id);
      if (albumCountIcon == null) {
        break missingId;
      }

      id = R.id.album_count_text;
      TextView albumCountText = ViewBindings.findChildViewById(rootView, id);
      if (albumCountText == null) {
        break missingId;
      }

      id = R.id.cab_holder;
      FrameLayout cabHolder = ViewBindings.findChildViewById(rootView, id);
      if (cabHolder == null) {
        break missingId;
      }

      id = R.id.duration_icon;
      ImageView durationIcon = ViewBindings.findChildViewById(rootView, id);
      if (durationIcon == null) {
        break missingId;
      }

      id = R.id.duration_text;
      TextView durationText = ViewBindings.findChildViewById(rootView, id);
      if (durationText == null) {
        break missingId;
      }

      id = R.id.header;
      LinearLayout header = ViewBindings.findChildViewById(rootView, id);
      if (header == null) {
        break missingId;
      }

      id = R.id.header_overlay;
      View headerOverlay = ViewBindings.findChildViewById(rootView, id);
      if (headerOverlay == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.imageBorderTheme;
      MaterialCardView imageBorderTheme = ViewBindings.findChildViewById(rootView, id);
      if (imageBorderTheme == null) {
        break missingId;
      }

      id = R.id.image_container;
      WidthFitSquareLayout imageContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.list;
      ObservableListView list = ViewBindings.findChildViewById(rootView, id);
      if (list == null) {
        break missingId;
      }

      id = R.id.song_count_icon;
      ImageView songCountIcon = ViewBindings.findChildViewById(rootView, id);
      if (songCountIcon == null) {
        break missingId;
      }

      id = R.id.song_count_text;
      TextView songCountText = ViewBindings.findChildViewById(rootView, id);
      if (songCountText == null) {
        break missingId;
      }

      id = R.id.title;
      AutoTruncateTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.title_scrollview;
      TouchInterceptHorizontalScrollView titleScrollview = ViewBindings.findChildViewById(rootView, id);
      if (titleScrollview == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityArtistDetailBinding((LinearLayout) rootView, albumCountIcon,
          albumCountText, cabHolder, durationIcon, durationText, header, headerOverlay, image,
          imageBorderTheme, imageContainer, list, songCountIcon, songCountText, title,
          titleScrollview, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

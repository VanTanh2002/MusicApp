// Generated by view binder compiler. Do not edit!
package com.poupa.vinylmusicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.poupa.vinylmusicplayer.R;
import com.poupa.vinylmusicplayer.views.AutoTruncateTextView;
import com.poupa.vinylmusicplayer.views.TouchInterceptFrameLayout;
import com.poupa.vinylmusicplayer.views.TouchInterceptHorizontalScrollView;
import com.simplecityapps.recyclerview_fastscroll.views.FastScrollRecyclerView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityGenreDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final FrameLayout cabHolder;

  @NonNull
  public final TextView empty;

  @NonNull
  public final FastScrollRecyclerView recyclerView;

  @NonNull
  public final AutoTruncateTextView title;

  @NonNull
  public final TouchInterceptHorizontalScrollView titleScrollview;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TouchInterceptFrameLayout touchInterceptFramelayout;

  private ActivityGenreDetailBinding(@NonNull FrameLayout rootView, @NonNull FrameLayout cabHolder,
      @NonNull TextView empty, @NonNull FastScrollRecyclerView recyclerView,
      @NonNull AutoTruncateTextView title,
      @NonNull TouchInterceptHorizontalScrollView titleScrollview, @NonNull Toolbar toolbar,
      @NonNull TouchInterceptFrameLayout touchInterceptFramelayout) {
    this.rootView = rootView;
    this.cabHolder = cabHolder;
    this.empty = empty;
    this.recyclerView = recyclerView;
    this.title = title;
    this.titleScrollview = titleScrollview;
    this.toolbar = toolbar;
    this.touchInterceptFramelayout = touchInterceptFramelayout;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityGenreDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityGenreDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_genre_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityGenreDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cab_holder;
      FrameLayout cabHolder = ViewBindings.findChildViewById(rootView, id);
      if (cabHolder == null) {
        break missingId;
      }

      id = android.R.id.empty;
      TextView empty = ViewBindings.findChildViewById(rootView, id);
      if (empty == null) {
        break missingId;
      }

      id = R.id.recycler_view;
      FastScrollRecyclerView recyclerView = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView == null) {
        break missingId;
      }

      id = R.id.title;
      AutoTruncateTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.title_scrollview;
      TouchInterceptHorizontalScrollView titleScrollview = ViewBindings.findChildViewById(rootView, id);
      if (titleScrollview == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.touch_intercept_framelayout;
      TouchInterceptFrameLayout touchInterceptFramelayout = ViewBindings.findChildViewById(rootView, id);
      if (touchInterceptFramelayout == null) {
        break missingId;
      }

      return new ActivityGenreDetailBinding((FrameLayout) rootView, cabHolder, empty, recyclerView,
          title, titleScrollview, toolbar, touchInterceptFramelayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

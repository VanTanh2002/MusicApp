// Generated by view binder compiler. Do not edit!
package com.poupa.vinylmusicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.poupa.vinylmusicplayer.R;
import com.poupa.vinylmusicplayer.views.AutoTruncateTextView;
import com.poupa.vinylmusicplayer.views.IconImageView;
import com.poupa.vinylmusicplayer.views.TouchInterceptFrameLayout;
import com.poupa.vinylmusicplayer.views.TouchInterceptHorizontalScrollView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemListBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final IconImageView dragView;

  @NonNull
  public final ImageView image;

  @NonNull
  public final MaterialCardView imageBorderTheme;

  @NonNull
  public final FrameLayout imageContainer;

  @NonNull
  public final TextView imageText;

  @NonNull
  public final IconImageView menu;

  @NonNull
  public final View separator;

  @NonNull
  public final View shortSeparator;

  @NonNull
  public final LinearLayout songView;

  @NonNull
  public final TextView text;

  @NonNull
  public final AutoTruncateTextView title;

  @NonNull
  public final TouchInterceptHorizontalScrollView titleScrollview;

  @NonNull
  public final TouchInterceptFrameLayout touchInterceptFramelayout;

  private ItemListBinding(@NonNull FrameLayout rootView, @NonNull IconImageView dragView,
      @NonNull ImageView image, @NonNull MaterialCardView imageBorderTheme,
      @NonNull FrameLayout imageContainer, @NonNull TextView imageText, @NonNull IconImageView menu,
      @NonNull View separator, @NonNull View shortSeparator, @NonNull LinearLayout songView,
      @NonNull TextView text, @NonNull AutoTruncateTextView title,
      @NonNull TouchInterceptHorizontalScrollView titleScrollview,
      @NonNull TouchInterceptFrameLayout touchInterceptFramelayout) {
    this.rootView = rootView;
    this.dragView = dragView;
    this.image = image;
    this.imageBorderTheme = imageBorderTheme;
    this.imageContainer = imageContainer;
    this.imageText = imageText;
    this.menu = menu;
    this.separator = separator;
    this.shortSeparator = shortSeparator;
    this.songView = songView;
    this.text = text;
    this.title = title;
    this.titleScrollview = titleScrollview;
    this.touchInterceptFramelayout = touchInterceptFramelayout;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.drag_view;
      IconImageView dragView = ViewBindings.findChildViewById(rootView, id);
      if (dragView == null) {
        break missingId;
      }

      id = R.id.image;
      ImageView image = ViewBindings.findChildViewById(rootView, id);
      if (image == null) {
        break missingId;
      }

      id = R.id.imageBorderTheme;
      MaterialCardView imageBorderTheme = ViewBindings.findChildViewById(rootView, id);
      if (imageBorderTheme == null) {
        break missingId;
      }

      id = R.id.image_container;
      FrameLayout imageContainer = ViewBindings.findChildViewById(rootView, id);
      if (imageContainer == null) {
        break missingId;
      }

      id = R.id.image_text;
      TextView imageText = ViewBindings.findChildViewById(rootView, id);
      if (imageText == null) {
        break missingId;
      }

      id = R.id.menu;
      IconImageView menu = ViewBindings.findChildViewById(rootView, id);
      if (menu == null) {
        break missingId;
      }

      id = R.id.separator;
      View separator = ViewBindings.findChildViewById(rootView, id);
      if (separator == null) {
        break missingId;
      }

      id = R.id.short_separator;
      View shortSeparator = ViewBindings.findChildViewById(rootView, id);
      if (shortSeparator == null) {
        break missingId;
      }

      id = R.id.song_view;
      LinearLayout songView = ViewBindings.findChildViewById(rootView, id);
      if (songView == null) {
        break missingId;
      }

      id = R.id.text;
      TextView text = ViewBindings.findChildViewById(rootView, id);
      if (text == null) {
        break missingId;
      }

      id = R.id.title;
      AutoTruncateTextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.title_scrollview;
      TouchInterceptHorizontalScrollView titleScrollview = ViewBindings.findChildViewById(rootView, id);
      if (titleScrollview == null) {
        break missingId;
      }

      id = R.id.touch_intercept_framelayout;
      TouchInterceptFrameLayout touchInterceptFramelayout = ViewBindings.findChildViewById(rootView, id);
      if (touchInterceptFramelayout == null) {
        break missingId;
      }

      return new ItemListBinding((FrameLayout) rootView, dragView, image, imageBorderTheme,
          imageContainer, imageText, menu, separator, shortSeparator, songView, text, title,
          titleScrollview, touchInterceptFramelayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

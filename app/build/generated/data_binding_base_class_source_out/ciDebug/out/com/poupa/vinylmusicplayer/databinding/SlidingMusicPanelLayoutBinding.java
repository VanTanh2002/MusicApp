// Generated by view binder compiler. Do not edit!
package com.poupa.vinylmusicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.poupa.vinylmusicplayer.R;
import com.sothree.slidinguppanel.SlidingUpPanelLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SlidingMusicPanelLayoutBinding implements ViewBinding {
  @NonNull
  private final SlidingUpPanelLayout rootView;

  @NonNull
  public final FrameLayout contentContainer;

  @NonNull
  public final FrameLayout playerFragmentContainer;

  @NonNull
  public final SlidingUpPanelLayout slidingLayout;

  @NonNull
  public final FrameLayout slidingPanel;

  private SlidingMusicPanelLayoutBinding(@NonNull SlidingUpPanelLayout rootView,
      @NonNull FrameLayout contentContainer, @NonNull FrameLayout playerFragmentContainer,
      @NonNull SlidingUpPanelLayout slidingLayout, @NonNull FrameLayout slidingPanel) {
    this.rootView = rootView;
    this.contentContainer = contentContainer;
    this.playerFragmentContainer = playerFragmentContainer;
    this.slidingLayout = slidingLayout;
    this.slidingPanel = slidingPanel;
  }

  @Override
  @NonNull
  public SlidingUpPanelLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SlidingMusicPanelLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SlidingMusicPanelLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.sliding_music_panel_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SlidingMusicPanelLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content_container;
      FrameLayout contentContainer = ViewBindings.findChildViewById(rootView, id);
      if (contentContainer == null) {
        break missingId;
      }

      id = R.id.player_fragment_container;
      FrameLayout playerFragmentContainer = ViewBindings.findChildViewById(rootView, id);
      if (playerFragmentContainer == null) {
        break missingId;
      }

      SlidingUpPanelLayout slidingLayout = (SlidingUpPanelLayout) rootView;

      id = R.id.sliding_panel;
      FrameLayout slidingPanel = ViewBindings.findChildViewById(rootView, id);
      if (slidingPanel == null) {
        break missingId;
      }

      return new SlidingMusicPanelLayoutBinding((SlidingUpPanelLayout) rootView, contentContainer,
          playerFragmentContainer, slidingLayout, slidingPanel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.poupa.vinylmusicplayer.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.poupa.vinylmusicplayer.R;
import com.poupa.vinylmusicplayer.views.IconImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import me.zhanghai.android.materialprogressbar.MaterialProgressBar;

public final class FragmentMiniPlayerBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final IconImageView miniPlayerImage;

  @NonNull
  public final IconImageView miniPlayerPlayPauseButton;

  @NonNull
  public final TextView miniPlayerTitle;

  @NonNull
  public final MaterialProgressBar progressBar;

  private FragmentMiniPlayerBinding(@NonNull FrameLayout rootView,
      @NonNull IconImageView miniPlayerImage, @NonNull IconImageView miniPlayerPlayPauseButton,
      @NonNull TextView miniPlayerTitle, @NonNull MaterialProgressBar progressBar) {
    this.rootView = rootView;
    this.miniPlayerImage = miniPlayerImage;
    this.miniPlayerPlayPauseButton = miniPlayerPlayPauseButton;
    this.miniPlayerTitle = miniPlayerTitle;
    this.progressBar = progressBar;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentMiniPlayerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentMiniPlayerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_mini_player, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentMiniPlayerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.mini_player_image;
      IconImageView miniPlayerImage = ViewBindings.findChildViewById(rootView, id);
      if (miniPlayerImage == null) {
        break missingId;
      }

      id = R.id.mini_player_play_pause_button;
      IconImageView miniPlayerPlayPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (miniPlayerPlayPauseButton == null) {
        break missingId;
      }

      id = R.id.mini_player_title;
      TextView miniPlayerTitle = ViewBindings.findChildViewById(rootView, id);
      if (miniPlayerTitle == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      MaterialProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      return new FragmentMiniPlayerBinding((FrameLayout) rootView, miniPlayerImage,
          miniPlayerPlayPauseButton, miniPlayerTitle, progressBar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
